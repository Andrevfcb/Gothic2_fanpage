{"version":3,"sources":["Components/Admin/AdminNav.js","Components/Admin/AdminCharacters/AdminAddCharacter.js","Components/Admin/AdminCharacters/AdminDeleteCharacter.js","Components/Admin/AdminCharacters/AdminCharacters.js","Components/Admin/AdminShoop/AdminAddItem.js","Components/Admin/AdminShoop/AdminDeleteItem.js","Components/Admin/AdminShoop/AdminShoop.js","Components/Admin/AdminPanel.js"],"names":["AdminNav","changeToHome","changeToCharacters","changeToShoop","onClick","AdminAddCharacter","characterSubmitHandler","inputHandler","formState","Fragment","onSubmit","Input","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","ImageUpload","center","Button","disabled","isValid","AdminDeleteCharacter","setOptions","choseDeletedCharacterId","deleteCharacterSubmitHandler","characterId","name","onChange","AdminCharacters","useHttpClient","isLoading","error","sendRequest","clearError","useState","isSendRequest","setIsSendRequest","characters","setCharacters","setCharacterId","auth","useContext","AuthContext","useForm","value","general","character","before","g2","image","interesting_facts","useEffect","fetchCharacters","a","process","responseData","event","preventDefault","formData","FormData","append","inputs","Authorization","token","alert","prevIsSendRequest","map","char","ErrorModal","onClear","LoadingSpinner","asOverlay","e","target","AdminAddItem","itemSubmitHandler","idd","AdminDeleteItem","choseDeletedItemId","deleteItemSubmitHandler","itemId","AdminShoop","items","setItems","setItemId","description","price","quantity","main","images","fetchItems","forEach","i","AdminPanel","section","setSection","className"],"mappings":"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","file":"static/js/3.900728ea.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst AdminNav = ({ changeToHome, changeToCharacters, changeToShoop }) => {\r\n    return (\r\n        \r\n            <ul>\r\n                <li onClick={changeToHome}>Start</li>\r\n                <li onClick={changeToCharacters}>Characters</li>\r\n                <li onClick={changeToShoop}>Shoop</li>\r\n            </ul>\r\n        \r\n    )\r\n}\r\n\r\nexport default AdminNav\r\n","import React from 'react';\r\n\r\nimport {\r\n    VALIDATOR_REQUIRE\r\n  } from '../../util/validators';\r\n\r\nimport ImageUpload from \"../../FormElements/ImageUpload\"\r\nimport Button from \"../../FormElements/Button\"\r\nimport Input from '../../FormElements/Input';\r\n\r\nconst AdminAddCharacter = ({ characterSubmitHandler, inputHandler, formState }) => {\r\n\r\n    return (\r\n        <React.Fragment>\r\n                <h2>ADD CHARACTER</h2>\r\n                <form \r\n                onSubmit={characterSubmitHandler}\r\n                >\r\n                    <Input \r\n                    id=\"name\"\r\n                    element=\"input\"\r\n                    type=\"text\"\r\n                    label=\"name\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Please enter a valid character name.\"\r\n                    onInput={inputHandler}\r\n                    />\r\n                    <ImageUpload\r\n                    center\r\n                    id=\"image\"\r\n                    onInput={inputHandler}\r\n                    errorText=\"Please provide an image.\"\r\n                    />\r\n                    <Input \r\n                    id=\"general\"\r\n                    element=\"textarea\"\r\n                    type=\"text\"\r\n                    label=\"general\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Please enter a valid character description.\"\r\n                    onInput={inputHandler}\r\n                    />\r\n                    <Input \r\n                    id=\"character\"\r\n                    element=\"textarea\"\r\n                    type=\"text\"\r\n                    label=\"character\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Please enter a valid character description.\"\r\n                    onInput={inputHandler}\r\n                    />\r\n                    <Input \r\n                    id=\"before\"\r\n                    element=\"textarea\"\r\n                    type=\"text\"\r\n                    label=\"before\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Please enter a valid character description.\"\r\n                    onInput={inputHandler}\r\n                    />\r\n                    <Input \r\n                    id=\"g2\"\r\n                    element=\"textarea\"\r\n                    type=\"text\"\r\n                    label=\"g2\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Please enter a valid character description.\"\r\n                    onInput={inputHandler}\r\n                    />\r\n                    <Input \r\n                    id=\"interesting_facts\"\r\n                    element=\"textarea\"\r\n                    type=\"text\"\r\n                    label=\"interesting_facts\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Please enter a valid character description.\"\r\n                    onInput={inputHandler}\r\n                    />\r\n                    <Button type=\"submit\" onClick={characterSubmitHandler} disabled={!formState.isValid}>\r\n                    ADD\r\n                    </Button>\r\n                </form>\r\n                </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminAddCharacter\r\n","import React from 'react';\r\nimport Button from \"../../FormElements/Button\"\r\n\r\nconst AdminDeleteCharacter = ({ setOptions, choseDeletedCharacterId, deleteCharacterSubmitHandler, characterId }) => {\r\n\r\n    return (\r\n        <React.Fragment>\r\n                <h2>DELETE CHARACTER</h2>\r\n                <select name=\"characters\" id=\"characters\" onChange={choseDeletedCharacterId} >{setOptions}</select>\r\n                <Button \r\n                onClick={deleteCharacterSubmitHandler}\r\n                disabled={!characterId}\r\n                >DELETE</Button>\r\n                </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminDeleteCharacter\r\n","import React, {useState, useEffect, useContext } from 'react';\r\n\r\nimport { useHttpClient } from '../../hooks/http-hook';\r\n\r\nimport { useForm } from \"../../hooks/form-hook\"\r\nimport ErrorModal from \"../../UIElements/ErrorModal\"\r\nimport { AuthContext } from '../../context/auth-context';\r\n\r\nimport LoadingSpinner from \"../../UIElements/LoadingSpinner\"\r\nimport AdminAddCharacter from './AdminAddCharacter';\r\nimport AdminDeleteCharacter from './AdminDeleteCharacter';\r\n\r\nconst AdminCharacters = () => {\r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const [isSendRequest, setIsSendRequest] = useState(true);\r\n    const [characters, setCharacters] = useState([]);\r\n    const [characterId, setCharacterId] = useState(false);\r\n    const auth = useContext(AuthContext);\r\n   \r\n\r\n    const [formState, inputHandler] = useForm(\r\n      {\r\n        name: {\r\n          value: '',\r\n          isValid: false\r\n      },\r\n          general: {\r\n              value: '',\r\n              isValid: false\r\n      },\r\n          character: {\r\n              value: '',\r\n              isValid: false\r\n      },\r\n          before: {\r\n              value: '',\r\n              isValid: false\r\n      },\r\n          g2: {\r\n              value: '',\r\n              isValid: false\r\n      },\r\n        image: {\r\n          value: null,\r\n          isValid: false\r\n        },\r\n        interesting_facts: {\r\n          value: '',\r\n          isValid: false\r\n      }\r\n      },\r\n      false\r\n    );\r\n\r\n    useEffect(() => {\r\n      const fetchCharacters = async () => {\r\n          try {\r\n            const responseData = await sendRequest(\r\n              `${process.env.REACT_APP_BACKEND_URL}/api/characters`\r\n            );\r\n    \r\n            setCharacters(responseData.characters);\r\n          } catch (err) {}\r\n        \r\n      };\r\n        fetchCharacters();\r\n    }, [sendRequest, isSendRequest])\r\n\r\n    const characterSubmitHandler = async event => {\r\n      event.preventDefault();\r\n        try { \r\n          const formData = new FormData();\r\n          formData.append('name', formState.inputs.name.value);\r\n          formData.append('interesting_facts', formState.inputs.interesting_facts.value);\r\n          formData.append('general', formState.inputs.general.value);\r\n          formData.append('character', formState.inputs.character.value);\r\n          formData.append('before', formState.inputs.before.value);\r\n          formData.append('g2', formState.inputs.g2.value);\r\n          formData.append('image', formState.inputs.image.value);\r\n          await sendRequest(\r\n            `${process.env.REACT_APP_BACKEND_URL}/api/characters/`,\r\n            'POST',\r\n            formData,\r\n            {\r\n              Authorization: 'Bearer ' + auth.token\r\n            }\r\n          );\r\n              alert(\"create character works\")\r\n              setIsSendRequest(prevIsSendRequest =>\r\n                !prevIsSendRequest)\r\n        } catch (err) {}\r\n    };\r\n\r\n      const deleteCharacterSubmitHandler = async event => {\r\n        event.preventDefault();\r\n            try {\r\n              await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/characters/${characterId}`,\r\n                'DELETE',\r\n                null,\r\n                {\r\n                  Authorization: 'Bearer ' + auth.token\r\n                }\r\n              );\r\n            alert(\"deleting character works\")\r\n            setIsSendRequest(prevIsSendRequest =>\r\n              !prevIsSendRequest)\r\n            } catch (err) {}\r\n        }\r\n\r\n        const choseDeletedCharacterId = (e) => {\r\n            setCharacterId(e.target.value)\r\n        }\r\n      \r\n        const setOptions = characters.map(char => <option value={char.id}>{char.name}</option>)\r\n\r\n    return (\r\n        <React.Fragment>\r\n          <ErrorModal error={error} onClear={clearError} />\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n            <AdminAddCharacter \r\n            characterSubmitHandler={characterSubmitHandler}\r\n            inputHandler={inputHandler}\r\n            formState={formState}\r\n            />\r\n            <AdminDeleteCharacter \r\n            setOptions={setOptions}\r\n            choseDeletedCharacterId={choseDeletedCharacterId}\r\n            deleteCharacterSubmitHandler={deleteCharacterSubmitHandler}\r\n            characterId={characterId}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminCharacters\r\n","import React from 'react';\r\n\r\nimport {\r\n    VALIDATOR_REQUIRE\r\n  } from '../../util/validators';\r\n\r\nimport ImageUpload from \"../../FormElements/ImageUpload\"\r\nimport Button from \"../../FormElements/Button\"\r\nimport Input from '../../FormElements/Input';\r\n\r\n\r\nconst AdminAddItem = ({ itemSubmitHandler, inputHandler, formState }) => {\r\n    \r\n\r\n    return (\r\n        <React.Fragment>\r\n                <h2>ADD ITEM</h2>\r\n                <form\r\n                onSubmit={itemSubmitHandler}\r\n                >\r\n                    <Input \r\n                    id=\"name\"\r\n                    element=\"input\"\r\n                    type=\"text\"\r\n                    label=\"name\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Please enter a valid item name.\"\r\n                    onInput={inputHandler}\r\n                    />\r\n                    <ImageUpload\r\n                    center\r\n                    id=\"images\"\r\n                    idd=\"images\"\r\n                    onInput={inputHandler}\r\n                    errorText=\"Please provide an image.\"\r\n                    />\r\n                    <Input \r\n                    id=\"description\"\r\n                    element=\"textarea\"\r\n                    type=\"text\"\r\n                    label=\"description\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Please enter a valid item description.\"\r\n                    onInput={inputHandler}\r\n                    />\r\n                    <Input \r\n                    id=\"price\"\r\n                    element=\"input\"\r\n                    type=\"number\"\r\n                    label=\"price\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Please enter a valid item price.\"\r\n                    onInput={inputHandler}\r\n                    />\r\n                    <Input \r\n                    id=\"quantity\"\r\n                    element=\"input\"\r\n                    type=\"number\"\r\n                    label=\"quantity\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Please enter a valid item quantity.\"\r\n                    onInput={inputHandler}\r\n                    />\r\n                    <Input \r\n                    id=\"main\"\r\n                    element=\"input\"\r\n                    type=\"text\"\r\n                    label=\"main category\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Please enter a valid item category.\"\r\n                    onInput={inputHandler}\r\n                    />\r\n                    <Button type=\"submit\"\r\n                    disabled={!formState.isValid}>\r\n                    ADD\r\n                    </Button>\r\n                </form>\r\n                </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminAddItem\r\n","import React from 'react';\r\nimport Button from \"../../FormElements/Button\"\r\n\r\nconst AdminDeleteItem = ({ setOptions, choseDeletedItemId, deleteItemSubmitHandler, itemId }) => {\r\n\r\n    return (\r\n            <React.Fragment>\r\n                <h2>DELETE ITEM</h2>\r\n                <select name=\"items\" id=\"items\" onChange={choseDeletedItemId} >{setOptions}</select>\r\n                <Button \r\n                onClick={deleteItemSubmitHandler}\r\n                disabled={!itemId}\r\n                >DELETE</Button>\r\n            </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminDeleteItem\r\n","import React, {useState, useEffect, useContext } from 'react';\r\n\r\nimport { useHttpClient } from '../../hooks/http-hook';\r\n\r\nimport { useForm } from \"../../hooks/form-hook\"\r\nimport ErrorModal from \"../../UIElements/ErrorModal\"\r\nimport { AuthContext } from '../../context/auth-context';\r\n\r\nimport LoadingSpinner from \"../../UIElements/LoadingSpinner\"\r\nimport AdminAddItem from './AdminAddItem';\r\nimport AdminDeleteItem from './AdminDeleteItem';\r\n\r\nconst AdminShoop = () => {\r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const [isSendRequest, setIsSendRequest] = useState(true);\r\n    const [items, setItems] = useState([]);\r\n    const [itemId, setItemId] = useState(false);\r\n    const auth = useContext(AuthContext);\r\n   \r\n\r\n    const [formState, inputHandler] = useForm(\r\n      {\r\n        name: {\r\n          value: '',\r\n          isValid: false\r\n      },\r\n          description: {\r\n              value: '',\r\n              isValid: false\r\n      },\r\n          price: {\r\n              value: '',\r\n              isValid: false\r\n      },\r\n          quantity: {\r\n              value: '',\r\n              isValid: false\r\n      },\r\n          main: {\r\n              value: '',\r\n              isValid: false\r\n      },\r\n        images: {\r\n          value: null,\r\n          isValid: false\r\n        }\r\n      },\r\n      false\r\n    );\r\n\r\n    useEffect(() => {\r\n      const fetchItems = async () => {\r\n          try {\r\n            const responseData = await sendRequest(\r\n              `${process.env.REACT_APP_BACKEND_URL}/api/items`\r\n            );\r\n    \r\n            setItems(responseData.items);\r\n          } catch (err) {}\r\n        \r\n      };\r\n      fetchItems();\r\n    }, [sendRequest, isSendRequest])\r\n\r\n    const itemSubmitHandler = async event => {\r\n      event.preventDefault();\r\n        try { \r\n          const formData = new FormData();\r\n          formData.append('name', formState.inputs.name.value);\r\n          formData.append('description', formState.inputs.description.value);\r\n          formData.append('price', formState.inputs.price.value);\r\n          formData.append('quantity', formState.inputs.quantity.value);\r\n          formData.append('main', formState.inputs.main.value);\r\n          const im = formState.inputs.images.value\r\n          im.forEach(\r\n            i => formData.append('images', i)\r\n            )\r\n          await sendRequest(\r\n            `${process.env.REACT_APP_BACKEND_URL}/api/items/`,\r\n            'POST',\r\n            formData,\r\n            {\r\n              Authorization: 'Bearer ' + auth.token\r\n            }\r\n          );\r\n              alert(\"create item works\")\r\n              setIsSendRequest(prevIsSendRequest =>\r\n                !prevIsSendRequest)\r\n        } catch (err) {}\r\n    };\r\n\r\n    const deleteItemSubmitHandler = async event => {\r\n        event.preventDefault();\r\n            try {\r\n              await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/items/${itemId}`,\r\n                'DELETE',\r\n                null,\r\n                {\r\n                  Authorization: 'Bearer ' + auth.token\r\n                }\r\n              );\r\n            alert(\"deleting item works\")\r\n            setIsSendRequest(prevIsSendRequest =>\r\n              !prevIsSendRequest)\r\n            } catch (err) {}\r\n        }\r\n\r\n    const choseDeletedItemId = (e) => {\r\n      setItemId(e.target.value)\r\n        }\r\n        const setOptions = items.map(i => <option value={i.id}>{i.name}</option>)\r\n\r\n    return (\r\n        <React.Fragment>\r\n          <ErrorModal error={error} onClear={clearError} />\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n            <AdminAddItem \r\n            itemSubmitHandler={itemSubmitHandler}\r\n            inputHandler={inputHandler}\r\n            formState={formState}\r\n            />\r\n            <AdminDeleteItem \r\n            setOptions={setOptions}\r\n            choseDeletedItemId={choseDeletedItemId}\r\n            deleteItemSubmitHandler={deleteItemSubmitHandler}\r\n            itemId={itemId}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminShoop\r\n","import React, {useState} from 'react';\r\nimport \"./Admin.css\"\r\nimport AdminNav from './AdminNav';\r\nimport AdminChar from './AdminCharacters/AdminCharacters';\r\nimport AdminShoop from './AdminShoop/AdminShoop';\r\n\r\nconst AdminPanel = () => {\r\n\r\n    const [section, setSection] = useState(0);\r\n\r\n    const changeToHome = () => setSection(0);\r\n    const changeToCharacters = () => setSection(1);\r\n    const changeToShoop = () => setSection(2);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"admin\">\r\n                <div className=\"admin-navigation\">\r\n                    <AdminNav changeToHome={changeToHome} changeToCharacters={changeToCharacters} changeToShoop={changeToShoop} />\r\n                </div>\r\n                <div className=\"admin-content\">\r\n                {section === 1 ? <AdminChar /> : (section === 2 ? <AdminShoop /> : <h2>Welcome to Admin Panel, use menu on the left to navigate</h2>)}\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminPanel\r\n"],"sourceRoot":""}