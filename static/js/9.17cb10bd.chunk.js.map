{"version":3,"sources":["Components/Body/ItemCard.js","Components/Body/Shoop.js"],"names":["ItemCard","id","name","price","images","Fragment","to","className","src","process","img","alt","style","fontFamily","Button","Shoop","useState","items","setItems","allItems","setAllItems","useHttpClient","isLoading","sendRequest","error","clearError","itemSearchValue","setItemSearchValue","useEffect","window","scrollTo","fetchItems","a","responseData","value","placeholder","onChange","e","target","inputValue","toLowerCase","filteredCharacters","filter","i","includes","LoadingSpinner","asOverlay","item_list","sort","b","map","description","quantity","category","item_category","itemList"],"mappings":"2NA8BeA,EAzBE,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,OAGhC,OACI,cAAC,IAAMC,SAAP,UACA,cAAC,IAAD,CAAMC,GAAE,iBAAYL,GAApB,SACI,sBACAM,UAAU,YADV,UAGI,qBAAKA,UAAU,mBAAf,SACA,qBAAKC,IAAG,UAAKC,kCAAL,YAA0CL,EAAO,GAAGM,KAAOC,IAAKT,MAExE,sBAAKK,UAAU,kBAAf,UACA,8BACI,+BAAOL,IACP,uBAAMU,MAAO,CAACC,WAAY,gBAA1B,UAA4CV,EAA5C,WAEJ,cAACW,EAAA,EAAD,8B,gBC2CDC,UAxDD,WAEV,MAA0BC,qBAA1B,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,qBAAhC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAsDC,cAA9CC,EAAR,EAAQA,UAAkBC,GAA1B,EAAmBC,MAAnB,EAA0BD,aAC1B,GADA,EAAuCE,WACOT,mBAAS,KAAvD,mBAAOU,EAAP,KAAwBC,EAAxB,KAEAC,qBAAU,WACNC,OAAOC,SAAS,EAAG,GACnB,IAAMC,EAAU,uCAAG,4BAAAC,EAAA,+EAGoBT,EAAY,GAAD,OACnCd,kCADmC,gBAH/B,OAGDwB,EAHC,OAOXf,EAASe,EAAahB,OACtBG,EAAYa,EAAahB,OARd,yGAAH,qDAWZc,MACL,CAACR,IAoBJ,OACI,sBAAKhB,UAAU,QAAf,UACI,qBAAKA,UAAU,cAAf,SACI,yCAEJ,uBAAO2B,MAAOR,EAAiBS,YAAY,SAASC,SAZxC,SAACC,GACjBV,EAAmBU,EAAEC,OAAOJ,OAC5B,IAAMK,EAAaF,EAAEC,OAAOJ,MAAMM,cAC5BC,EAAqBtB,EAASuB,QAAO,SAAAC,GAAC,OAAIA,EAAEzC,KAAKsC,cAAcI,SAASL,MAC9ErB,EAASuB,MAUL,sBAAKlC,UAAU,cAAf,UACCe,GAAa,cAACuB,EAAA,EAAD,CAAgBC,WAAS,IAClC7B,GA3BI,WACb,IAAI8B,EAON,OALK9B,IAEC8B,EADY9B,EAAM+B,MAAK,SAAChB,EAAGiB,GAAJ,OAAUjB,EAAE9B,KAAO+C,EAAE/C,KAAO,GAAK,KAClCgD,KAAI,SAAAP,GAC1B,OAAQ,cAAC,EAAD,CAAqB1C,GAAI0C,EAAE1C,GAAIC,KAAMyC,EAAEzC,KAAMC,MAAOwC,EAAExC,MAAOgD,YAAaR,EAAEQ,YAAaC,SAAUT,EAAES,SAAUhD,OAAQuC,EAAEvC,OAAQiD,SAAUV,EAAEU,SAAUC,cAAeX,EAAEW,eAAzJX,EAAE1C,QAExB8C,EAmBaQ","file":"static/js/9.17cb10bd.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport Button from '../FormElements/Button';\r\n\r\n\r\nconst ItemCard = ({id, name, price, images}) => {\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n        <Link to={`/store/${id}`}>\r\n            <div \r\n            className=\"item-card\"\r\n            >\r\n                <div className=\"item-card__image\">\r\n                <img src={`${process.env.REACT_APP_BACKEND_URL}/${images[0].img}`} alt={name}></img>\r\n                </div>\r\n                <div className=\"item-card__info\">\r\n                <p>\r\n                    <span>{name}</span>\r\n                    <span style={{fontFamily: \"Nanum Gothic\"}}>{price} $</span>\r\n                </p>\r\n                <Button>SHOW</Button>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default ItemCard\r\n","import React, {useState, useEffect} from 'react';\r\nimport \"./Shoop.css\";\r\nimport Input from '../FormElements/Input';\r\nimport ItemCard from './ItemCard';\r\n\r\nimport LoadingSpinner from \"../UIElements/LoadingSpinner\"\r\nimport { useHttpClient } from '../hooks/http-hook';\r\n\r\n\r\nconst Shoop = () => {\r\n\r\n    const [items, setItems] = useState();\r\n    const [allItems, setAllItems] = useState();\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const [itemSearchValue, setItemSearchValue] = useState('');\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n        const fetchItems = async () => {\r\n                \r\n                try {\r\n                    const responseData = await sendRequest(\r\n                    `${process.env.REACT_APP_BACKEND_URL}/api/items/`\r\n                  );\r\n                \r\n                setItems(responseData.items)\r\n                setAllItems(responseData.items)\r\n                } catch (err) {}\r\n            }\r\n            fetchItems()\r\n    }, [sendRequest])\r\n\r\n    const itemList = () => {\r\n        let item_list\r\n        let sortItems\r\n        if(items) {\r\n            sortItems = items.sort((a, b) => a.name > b.name ? 1 : -1)\r\n            item_list = sortItems.map(i => {\r\n            return (<ItemCard key={i.id} id={i.id} name={i.name} price={i.price} description={i.description} quantity={i.quantity} images={i.images} category={i.category} item_category={i.item_category} />)\r\n    })\r\n    } return item_list\r\n    }\r\n\r\n    const inputChange = (e) => {\r\n        setItemSearchValue(e.target.value)\r\n        const inputValue = e.target.value.toLowerCase()\r\n        const filteredCharacters = allItems.filter(i => i.name.toLowerCase().includes(inputValue))\r\n        setItems(filteredCharacters)\r\n    }\r\n\r\n    return (\r\n        <div className=\"shoop\">\r\n            <div className=\"shoop-image\">\r\n                <h1>Store</h1>\r\n            </div>\r\n            <input value={itemSearchValue} placeholder=\"search\" onChange={inputChange} />\r\n            {/* <Input element=\"input\"  /> */}\r\n            <div className=\"shoop-items\">\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n                {items && itemList()}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Shoop\r\n"],"sourceRoot":""}